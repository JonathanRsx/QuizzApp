{"version":3,"sources":["components/settings.js","components/Right.svg","components/Wrong.svg","components/question.js","App.js","reportWebVitals.js","index.js"],"names":["_regeneratorRuntime","exports","Op","Object","prototype","hasOwn","hasOwnProperty","defineProperty","obj","key","desc","value","$Symbol","Symbol","iteratorSymbol","iterator","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","define","enumerable","configurable","writable","err","wrap","innerFn","outerFn","self","tryLocsList","protoGenerator","Generator","generator","create","context","Context","makeInvokeMethod","tryCatch","fn","arg","type","call","ContinueSentinel","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","this","getProto","getPrototypeOf","NativeIteratorPrototype","values","Gp","defineIteratorMethods","forEach","method","_invoke","AsyncIterator","PromiseImpl","previousPromise","callInvokeWithMethodAndArg","resolve","reject","invoke","record","result","__await","then","unwrapped","error","state","Error","doneResult","delegate","delegateResult","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","done","methodName","undefined","return","TypeError","info","resultName","next","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","iterable","iteratorMethod","isNaN","length","i","displayName","isGeneratorFunction","genFun","ctor","constructor","name","mark","setPrototypeOf","__proto__","awrap","async","Promise","iter","keys","val","object","reverse","pop","skipTempReset","prev","charAt","slice","stop","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","catch","thrown","delegateYield","Settings","_path","_ref","onStartQuiz","_useState","useState","_useState2","_slicedToArray","loading","setLoading","_useState3","_useState4","options","setOptions","_useState5","_useState6","questionCategory","setQuestionCategory","_useState7","_useState8","questionDifficulty","setQuestionDifficulty","_useState9","_useState10","numberOfQuestions","setNumberOfQuestions","_useState11","_useState12","questionType","setQuestionType","useEffect","fetch","res","json","response","trivia_categories","handleStartQuiz","_ref2","_asyncToGenerator","_callee","apiUrl","_context","concat","results","apply","arguments","React","createElement","className","onChange","event","target","map","option","id","onClick","_extends","assign","bind","source","Wrong_path","Right_SvgComponent","props","react_default","a","width","height","viewBox","fill","d","__webpack_require__","p","Wrong_extends","Wrong_SvgComponent","Question","questions","score","setScore","questionIndex","setQuestionIndex","currentQuestion","setCurrentQuestion","choices","setChoices","answer","setAnswer","_useState13","_useState14","isAnswered","setIsAnswered","decodeHTML","html","txt","document","innerHTML","_toConsumableArray","incorrect_answers","correct_answer","handleSelectQuestion","textContent","querySelectorAll","element","class","style","question","sort","IconRight","IconWrong","querySelector","display","App","showSettings","setShowSettings","setQuestions","reportWebVitals","onPerfEntry","Function","e","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","getElementById","render","StrictMode"],"mappings":"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","file":"static/js/main.bb1c083f.chunk.js","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport \"./Settings.css\";\r\n\r\nfunction Settings({ onStartQuiz }) {\r\n  const [loading, setLoading] = useState(false);\r\n  const [options, setOptions] = useState(null);\r\n  const [questionCategory, setQuestionCategory] = useState(\"\");\r\n  const [questionDifficulty, setQuestionDifficulty] = useState(\"\");\r\n  const [numberOfQuestions, setNumberOfQuestions] = useState(10);\r\n  const [questionType, setQuestionType] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    const apiUrl = `https://opentdb.com/api_category.php`;\r\n    setLoading(true);\r\n\r\n    fetch(apiUrl)\r\n      .then((res) => res.json())\r\n      .then((response) => {\r\n        setLoading(false);\r\n        setOptions(response.trivia_categories);\r\n      });\r\n  }, [setOptions]);\r\n\r\n  const handleCategoryChange = (event) => {\r\n    setQuestionCategory(event.target.value);\r\n  };\r\n\r\n  const handleDifficultyChange = (event) => {\r\n    setQuestionDifficulty(event.target.value);\r\n  };\r\n\r\n  const handleTypeChange = (event) => {\r\n    setQuestionType(event.target.value);\r\n  };\r\n\r\n  const handleAmountChange = (event) => {\r\n    setNumberOfQuestions(event.target.value);\r\n  };\r\n\r\n  const handleStartQuiz = async () => {\r\n    setLoading(true);\r\n\r\n    const apiUrl = `https://opentdb.com/api.php?amount=${numberOfQuestions}&category=${questionCategory}&difficulty=${questionDifficulty}&type=${questionType}`;\r\n    await fetch(apiUrl)\r\n      .then((res) => res.json())\r\n      .then((response) => {\r\n        setLoading(false);\r\n        onStartQuiz(response.results);\r\n      });\r\n  };\r\n\r\n  if (loading) {\r\n    return (\r\n      <div className=\"conSettingsMain\">\r\n        <p>Loading...</p>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"conSettingsMain\">\r\n      <h1>Quiz App</h1>\r\n      <div className=\"conSettingsCategory\">\r\n        <p>Select Category:</p>\r\n        <select value={questionCategory} onChange={handleCategoryChange}>\r\n          <option>All</option>\r\n          {options &&\r\n            options.map((option) => (\r\n              <option value={option.id} key={option.id}>\r\n                {option.name}\r\n              </option>\r\n            ))}\r\n        </select>\r\n      </div>\r\n      <div className=\"conSettingsCategory\">\r\n        <p>Select Difficulty:</p>\r\n        <select value={questionDifficulty} onChange={handleDifficultyChange}>\r\n          <option value=\"\">All</option>\r\n          <option value=\"easy\">Easy</option>\r\n          <option value=\"medium\">Medium</option>\r\n          <option value=\"hard\">Hard</option>\r\n        </select>\r\n      </div>\r\n      <div className=\"conSettingsCategory\">\r\n        <p>Select Question Type:</p>\r\n        <select value={questionType} onChange={handleTypeChange}>\r\n          <option value=\"\" key=\"type-0\">\r\n            All\r\n          </option>\r\n          <option value=\"multiple\" key=\"type-1\">\r\n            Multiple Choice\r\n          </option>\r\n          <option value=\"boolean\" key=\"type-2\">\r\n            True/False\r\n          </option>\r\n        </select>\r\n      </div>\r\n      <div className=\"conSettingsCategory\">\r\n        <p>Amount of Questions:</p>\r\n        <input\r\n          type=\"text\"\r\n          value={numberOfQuestions}\r\n          onChange={handleAmountChange}\r\n        />\r\n      </div>\r\n      <div className=\"conSettingsCategory\">\r\n        <button onClick={handleStartQuiz} className=\"btn\">\r\n          Start Quizz\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Settings;\r\n","var _path;\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nimport React from 'react';\nvar SvgComponent = function SvgComponent(props) {\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 30,\n    height: 30,\n    viewBox: \"0 0 30 30\",\n    fill: \"none\"\n  }, props), _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M12.9 17.7L9.6375 14.4375C9.3625 14.1625 9.025 14.025 8.625 14.025C8.225 14.025 7.875 14.175 7.575 14.475C7.3 14.75 7.1625 15.1 7.1625 15.525C7.1625 15.95 7.3 16.3 7.575 16.575L11.85 20.85C12.125 21.125 12.475 21.2625 12.9 21.2625C13.325 21.2625 13.675 21.125 13.95 20.85L22.4625 12.3375C22.7375 12.0625 22.875 11.725 22.875 11.325C22.875 10.925 22.725 10.575 22.425 10.275C22.15 10 21.8 9.8625 21.375 9.8625C20.95 9.8625 20.6 10 20.325 10.275L12.9 17.7ZM15 30C12.925 30 10.975 29.606 9.15 28.818C7.325 28.031 5.7375 26.9625 4.3875 25.6125C3.0375 24.2625 1.969 22.675 1.182 20.85C0.394 19.025 0 17.075 0 15C0 12.925 0.394 10.975 1.182 9.15C1.969 7.325 3.0375 5.7375 4.3875 4.3875C5.7375 3.0375 7.325 1.9685 9.15 1.1805C10.975 0.3935 12.925 0 15 0C17.075 0 19.025 0.3935 20.85 1.1805C22.675 1.9685 24.2625 3.0375 25.6125 4.3875C26.9625 5.7375 28.031 7.325 28.818 9.15C29.606 10.975 30 12.925 30 15C30 17.075 29.606 19.025 28.818 20.85C28.031 22.675 26.9625 24.2625 25.6125 25.6125C24.2625 26.9625 22.675 28.031 20.85 28.818C19.025 29.606 17.075 30 15 30Z\",\n    fill: \"white\"\n  })));\n};\nexport default __webpack_public_path__ + \"static/media/Right.b21bb1e3.svg\";\nexport { SvgComponent as ReactComponent };","var _path;\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nimport React from 'react';\nvar SvgComponent = function SvgComponent(props) {\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 30,\n    height: 30,\n    viewBox: \"0 0 30 30\",\n    fill: \"none\"\n  }, props), _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M15 0C6.705 0 0 6.705 0 15C0 23.295 6.705 30 15 30C23.295 30 30 23.295 30 15C30 6.705 23.295 0 15 0ZM21.45 21.45C21.3112 21.5891 21.1464 21.6994 20.9649 21.7746C20.7835 21.8499 20.589 21.8887 20.3925 21.8887C20.196 21.8887 20.0015 21.8499 19.8201 21.7746C19.6386 21.6994 19.4738 21.5891 19.335 21.45L15 17.115L10.665 21.45C10.3845 21.7305 10.0041 21.888 9.6075 21.888C9.21086 21.888 8.83047 21.7305 8.55 21.45C8.26953 21.1695 8.11197 20.7891 8.11197 20.3925C8.11197 20.1961 8.15065 20.0016 8.22581 19.8202C8.30097 19.6387 8.41113 19.4739 8.55 19.335L12.885 15L8.55 10.665C8.26953 10.3845 8.11197 10.0041 8.11197 9.6075C8.11197 9.21086 8.26953 8.83047 8.55 8.55C8.83047 8.26953 9.21086 8.11197 9.6075 8.11197C10.0041 8.11197 10.3845 8.26953 10.665 8.55L15 12.885L19.335 8.55C19.4739 8.41113 19.6387 8.30097 19.8202 8.22581C20.0016 8.15065 20.1961 8.11197 20.3925 8.11197C20.5889 8.11197 20.7834 8.15065 20.9648 8.22581C21.1463 8.30097 21.3111 8.41113 21.45 8.55C21.5889 8.68887 21.699 8.85374 21.7742 9.03519C21.8493 9.21663 21.888 9.4111 21.888 9.6075C21.888 9.8039 21.8493 9.99837 21.7742 10.1798C21.699 10.3613 21.5889 10.5261 21.45 10.665L17.115 15L21.45 19.335C22.02 19.905 22.02 20.865 21.45 21.45Z\",\n    fill: \"white\"\n  })));\n};\nexport default __webpack_public_path__ + \"static/media/Wrong.22253a65.svg\";\nexport { SvgComponent as ReactComponent };","// src/Components/Question.js\r\nimport React, { useEffect, useState } from \"react\";\r\nimport \"./Questions.css\";\r\nimport { ReactComponent as IconRight } from \"./Right.svg\";\r\nimport { ReactComponent as IconWrong } from \"./Wrong.svg\";\r\n\r\nfunction Question({ questions, onStartQuiz }) {\r\n  const [loading, setLoading] = useState(false);\r\n  const [score, setScore] = useState(0);\r\n  const [questionIndex, setQuestionIndex] = useState(0);\r\n  const [currentQuestion, setCurrentQuestion] = useState(questions[0]);\r\n  const [choices, setChoices] = useState([]);\r\n  const [answer, setAnswer] = useState(\"\");\r\n  const [isAnswered, setIsAnswered] = useState(false);\r\n\r\n  const decodeHTML = (html) => {\r\n    const txt = document.createElement(\"textarea\");\r\n    txt.innerHTML = html;\r\n    return txt.value;\r\n  };\r\n\r\n  useEffect(() => {\r\n    setChoices([\r\n      ...currentQuestion.incorrect_answers,\r\n      currentQuestion.correct_answer,\r\n    ]);\r\n  }, [currentQuestion]);\r\n\r\n  const handleSelectQuestion = (event) => {\r\n    setAnswer(event.target.textContent);\r\n    const listElements = document.querySelectorAll(\"li\");\r\n    listElements.forEach((element) => {\r\n      if (element.textContent === event.target.textContent) {\r\n        element.className = \"selected\";\r\n      } else {\r\n        element.className = \"\";\r\n      }\r\n    });\r\n  };\r\n\r\n  const handleCheckQuestion = (event) => {\r\n    setIsAnswered(true);\r\n    const listElements = document.querySelectorAll(\"li\");\r\n    listElements.forEach((element) => {\r\n      if (element.textContent === currentQuestion.correct_answer) {\r\n        element.className = \"right\";\r\n        element.querySelector(\".IconRigth\").style.display = \"flex\";\r\n      } else if (element.textContent === answer) {\r\n        element.className = \"wrong\";\r\n        element.querySelector(\".IconWrong\").style.display = \"flex\";\r\n      } else if (answer === currentQuestion.correct_answer) {\r\n        setScore(score + 1);\r\n      }\r\n    });\r\n  };\r\n\r\n  const handleChangeQuestion = (event) => {\r\n    setLoading(true);\r\n    setAnswer(\"\");\r\n    if (questionIndex + 1 < questions.length) {\r\n      setCurrentQuestion(questions[questionIndex + 1]);\r\n      setChoices([\r\n        ...questions[questionIndex + 1].incorrect_answers,\r\n        questions[questionIndex + 1].correct_answer,\r\n      ]);\r\n\r\n      const listElements = document.querySelectorAll(\"li\");\r\n      listElements.forEach((element) => {\r\n        element.className = \"\";\r\n        element.querySelector(\".IconRigth\").style.display = \"none\";\r\n        element.querySelector(\".IconWrong\").style.display = \"none\";\r\n      });\r\n    }\r\n    setQuestionIndex(questionIndex + 1);\r\n    setIsAnswered(false);\r\n    setLoading(false);\r\n  };\r\n\r\n  if (!loading) {\r\n    if (questionIndex === questions.length) {\r\n      return (\r\n        <div className=\"questionMainCon\">\r\n          <p>Your Score is </p>\r\n          <div className=\"conScore\">\r\n            <h1 class=\"score\">{score}</h1>\r\n          </div>\r\n          <p>out of {questions.length} questions </p>\r\n          <button onClick={onStartQuiz} className=\"btn\">\r\n            Home Screen\r\n          </button>\r\n        </div>\r\n      );\r\n    } else {\r\n      return (\r\n        <div className=\"questionMainCon\">\r\n          <div className=\"headerQuestion\">\r\n            <span onClick={onStartQuiz}>&#x2715;</span>\r\n            <p>Question {questionIndex + 1}</p>\r\n            <div className=\"progressBarBG\">\r\n              <div\r\n                className=\"progressBarValue\"\r\n                style={{\r\n                  width: ((questionIndex + 1) / questions.length) * 100 + \"px\",\r\n                }}\r\n              ></div>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"conQuestion\">\r\n            <p>{decodeHTML(currentQuestion.question)}</p>\r\n            <ul>\r\n              {(currentQuestion.type === \"multiple\"\r\n                ? choices.sort()\r\n                : choices.sort().reverse()\r\n              ).map((option, i) => (\r\n                <li\r\n                  key={i}\r\n                  onClick={isAnswered ? () => {} : handleSelectQuestion}\r\n                >\r\n                  <IconRight className=\"IconRigth\" />\r\n                  <IconWrong className=\"IconWrong\" />\r\n                  {decodeHTML(option)}\r\n                </li>\r\n              ))}\r\n            </ul>\r\n          </div>\r\n          {!isAnswered && (\r\n            <button\r\n              onClick={answer === \"\" ? () => {} : handleCheckQuestion}\r\n              className=\"btn\"\r\n            >\r\n              Check\r\n            </button>\r\n          )}\r\n          {isAnswered && (\r\n            <button onClick={handleChangeQuestion} className=\"btn\">\r\n              {\" \"}\r\n              {questionIndex + 1 === questions.length\r\n                ? \"View Score\"\r\n                : \"Next Question\"}\r\n            </button>\r\n          )}\r\n        </div>\r\n      );\r\n    }\r\n  } else {\r\n    return <p>Loading...</p>;\r\n  }\r\n}\r\nexport default Question;\r\n","import Settings from \"./components/settings\";\nimport Question from \"./components/question\";\nimport React, { useState } from \"react\";\nimport \"./App.css\";\n\nconst App = () => {\n  const [showSettings, setShowSettings] = useState(true);\n  // const [settingsValue, setSettingsValue] = useState(null);\n\n  const [questions, setQuestions] = useState([]);\n\n  const handleStartQuiz = (questions) => {\n    setQuestions(questions);\n    setShowSettings(!showSettings);\n  };\n\n  return (\n    <div className=\"App\">\n      {showSettings ? (\n        <Settings onStartQuiz={handleStartQuiz} />\n      ) : (\n        <Question questions={questions} onStartQuiz={handleStartQuiz} />\n      )}\n    </div>\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}